// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(uuid())
  nickname         String
  email            String            @unique
  password         String
  role             Role              @default(USER)
  isActivated      Boolean           @default(false)
  activationLink   String?
  region           String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now()) @updatedAt
  lang             Lang              @default(en)
  refreshToken     Token[]
  UserPasswordCode UserPasswordCode?
  UserScores       UserScores?
}

model Token {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshToken String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}

model UserPasswordCode {
  id           String   @id @default(uuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  passwordCode String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}

model Game {
  id          String      @id @default(uuid())
  name        String      @unique
  description String
  UserScores  UserScores?
}

model UserScores {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  gameId String @unique
  game   Game   @relation(fields: [gameId], references: [id])
  level  Int    @default(0)
  score  BigInt @default(0)
  region String
}

enum Role {
  USER
  ADMIN
}

enum Lang {
  en
  pl
  ua
}
